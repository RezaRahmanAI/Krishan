using IMSWEB.Model;
using System;
using System.Collections.Generic;
using System.Dynamic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace IMSWEB.Service
{
    public interface IBankTransactionService
    {
    
        void AddBankTransaction(BankTransaction bankTransaction);
        void UpdateBankTransaction(BankTransaction bankTransaction);
        void SaveBankTransaction();
        Task<IEnumerable<Tuple<int, string, string, decimal, string, string, string>>> GetAllBankTransactionAsync();
        IEnumerable<Tuple<int, string, string, decimal, string, string, string, Tuple<decimal?, int>>> GetAllBankTransaction();
        //IEnumerable<Tuple<int, string, string, decimal, string, string, string, Tuple<decimal?, string, decimal, int, int, string, string, Tuple<int, int, int, int>>>> GetAllProductFromDetail();
        //IEnumerable<Tuple<int, string, string, decimal, string, string, string, Tuple<decimal?, string, decimal, int, int, string, string>>> SRWiseGetAllProductFromDetail(int EmployeeID);


        BankTransaction GetBankTransactionById(int id);
        void DeleteBankTransaction(int id);

        //IEnumerable<Tuple<int, string, string,decimal, string, string, string, Tuple<decimal?, string, decimal, int, int, string, string>>> GetAllSalesProductFromDetailByCustomerID();
        //GetAllProductFromDetail
        //IEnumerable<Tuple<int, string, string,
        // decimal, string, string, string, Tuple<decimal?, string, decimal, int, int, string, string>>> GetAllSalesBankTransactionFromDetailByCustomerID(int CustomerID);
        //IEnumerable<Tuple<int, string, string, decimal, string, string, string, Tuple<decimal?, string, decimal, int, int, string, string, Tuple<decimal, int, int, int, int>>>> GetAllBankTransactionFromDetailForCredit();
        //IEnumerable<Tuple<int, string, string, string, string>> GetBankTransactionDetails();

    }
}
