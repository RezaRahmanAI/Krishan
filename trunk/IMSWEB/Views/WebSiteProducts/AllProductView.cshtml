@model IEnumerable<IMSWEB.WebsiteProductViewModels>
@{
    Layout = null;
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
<style>
    body {
        background-color: #f8f9fa;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .category-btns a {
        transition: all 0.3s ease;
        padding: 12px 25px;
        border-radius: 50px;
        display: inline-block;
        margin: 0 10px 10px 10px;
        font-weight: 700;
        cursor: pointer;
    }

    .category-btns a:hover {
        background-color: #198754;
        color: #fff !important;
        transform: scale(1.1);
        text-decoration: none;
    }

    .Product-item {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: flex-start;
        border-radius: 15px;
        overflow: hidden;
        padding: 0;
        position: relative;
        cursor: pointer;
        transition: transform 0.4s ease, box-shadow 0.4s ease;
        height: 100%;
        background: linear-gradient(135deg, #e0f7fa 0%, #ffe0b2 100%);
    }

    .Product-item:hover {
        transform: translateY(-10px) scale(1.03);
        box-shadow: 0 20px 35px rgba(0,0,0,0.3);
    }

    .Product-item img {
        width: 100%;
        height: 300px;
        object-fit: cover;
        transition: transform 0.4s ease;
    }

    .Product-item img:hover {
        transform: scale(1.05);
    }

    .Product-info {
        padding: 15px 10px;
        text-align: center;
        width: 100%;
        background: rgba(255, 255, 255, 0.85);
        box-shadow: inset 0 2px 5px rgba(0,0,0,0.05);
    }

    .Product-info p {
        color: #198754;
        font-weight: 800;
        margin: 5px 0 8px;
        font-size: 1.6rem; /* Bigger price */
    }

    .Product-info span a {
        font-size: 1.5rem; /* Bigger title */
        font-weight: 700;
        color: #343a40;
        text-decoration: none;
        transition: color 0.3s ease;
    }

    .Product-info span a:hover {
        color: #198754;
    }

    /* fade-in animation */
    .fade-in {
        animation: fadeInUp 0.5s ease forwards;
        opacity: 0;
    }

    @@keyframes fadeInUp {
        0% {
            opacity: 0;
            transform: translateY(20px);
        }
        100% {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@media (max-width: 992px) {
        .Product-item img {
            height: 250px;
        }
        .Product-info p {
            font-size: 1.4rem;
        }
        .Product-info span a {
            font-size: 1.3rem;
        }
    }

    @@media (max-width: 768px) {
        .category-btns a {
            margin: 5px;
            font-size: 1rem;
        }
        .Product-item img {
            height: 200px;
        }
        .Product-info p {
            font-size: 1.3rem;
        }
        .Product-info span a {
            font-size: 1.2rem;
        }
    }
</style>

<div class="container py-5">
    <div class="row mb-4">
        <div class="col-12 text-center category-btns">
            <a class="fs-5 text-success" onclick="loadAllProductsBy()">All</a>
            <a class="fs-5 text-dark" onclick="loadProductsByCategory(1)">Mosquitos</a>
            <a class="fs-5 text-dark" onclick="loadProductsByCategory(2)">Ants</a>
            <a class="fs-5 text-dark" onclick="loadProductsByCategory(3)">Termites</a>
            <a class="fs-5 text-dark" onclick="loadProductsByCategory(4)">Fleas</a>
        </div>
    </div>

    <div class="row g-4" id="hideForCategoryProduct">
        @if (Model != null && Model.Any())
        {
            var randomItems = Model.OrderBy(x => Guid.NewGuid()).Take(9);
            int i = 0;
            foreach (var item in randomItems)
            {
                double delay = i * 0.1;
                string delayStr = delay.ToString("0.0");
                <div class="col-12 col-sm-6 col-md-4 fade-in" style="animation-delay:@(delayStr + "s")">
                    <div class="Product-item text-center">
                        <a href="@Url.Action("GetProductDetails", "WebSiteProducts", new { id = item.Id })">
                            <img src="@item.DocumentPath" alt="@item.Title">
                        </a>
                        <div class="Product-info">
                            <h5>@item.Price</h5>
                            <h2><a>@item.Title</a></h2>
                        </div>
                    </div>
                </div>
                i++;
            }
        }
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
<script>
    function renderProducts(products) {
        var container = $("#hideForCategoryProduct");
        container.empty();
        if (products && products.length > 0) {
            var randomItems = products.sort(function () { return 0.5 - Math.random(); }).slice(0, 9);
            var delay = 0;
            for (var i = 0; i < randomItems.length; i++) {
                var item = randomItems[i];
                var delayStr = delay.toFixed(1);
                var html = '<div class="col-12 col-sm-6 col-md-4 fade-in" style="animation-delay:' + delayStr + 's">' +
                    '<div class="Product-item text-center">' +
                    '<a href="/WebSiteProducts/GetProductDetails/' + item.Id + '">' +
                    '<img src="' + item.DocumentPath + '" alt="' + item.Title + '">' +
                    '</a>' +
                    '<div class="Product-info">' +
                    '<p>' + item.Price + '</p>' +
                    '<span><a>' + item.Title + '</a></span>' +
                    '</div></div></div>';
                container.append(html);
                delay += 0.1;
            }
        } else {
            container.append('<div class="col-12 text-center text-muted">No products available.</div>');
        }
    }

    function loadProductsByCategory(category) {
        $.ajax({
            url: "/WebSiteProducts/CateGoryWiseProductView",
            type: "GET",
            data: { category: category },
            dataType: "json",
            success: function (data) {
                renderProducts(data);
            },
            error: function (err) {
                console.log(err);
            }
        });
    }

    function loadAllProductsBy() {
        $.ajax({
            url: "/WebSiteProducts/GetAllProduct",
            type: "GET",
            dataType: "json",
            success: function (data) {
                renderProducts(data);
            },
            error: function (err) {
                console.log(err);
            }
        });
    }
</script>
