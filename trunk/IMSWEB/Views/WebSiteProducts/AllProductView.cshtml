@model IEnumerable<IMSWEB.WebsiteProductViewModels>
@{
    Layout = null;
}

@using System
@using System.Globalization
@using System.Linq
@{
    var placeholderImage = Url.Content("~/Content/images/product-placeholder.svg");
    Func<string, string> resolveAsset = path =>
    {
        if (string.IsNullOrWhiteSpace(path))
        {
            return placeholderImage;
        }

        if (path.StartsWith("http", StringComparison.OrdinalIgnoreCase))
        {
            return path;
        }

        if (path.StartsWith("~/", StringComparison.OrdinalIgnoreCase))
        {
            return Url.Content(path);
        }

        if (path.StartsWith("/", StringComparison.OrdinalIgnoreCase))
        {
            return Url.Content("~" + path);
        }

        return Url.Content("~/" + path.TrimStart('/'));
    };

    var productSamples = (Model ?? Enumerable.Empty<IMSWEB.WebsiteProductViewModels>())
        .OrderByDescending(x => x.CreateDate)
        .Take(9)
        .ToList();
}

<style>
    .new-arrivals-collection {
        background: linear-gradient(145deg, #ffffff 0%, #f8fafc 100%);
        border-radius: 28px;
        padding: 2rem;
        box-shadow: 0 24px 60px -35px rgba(15, 23, 42, 0.45);
    }

    .collection-toolbar {
        display: flex;
        align-items: center;
        justify-content: space-between;
        gap: 1.5rem;
        flex-wrap: wrap;
        margin-bottom: 1.75rem;
    }

    .collection-eyebrow {
        text-transform: uppercase;
        letter-spacing: 0.18em;
        font-size: 0.72rem;
        font-weight: 700;
        color: #0ea5e9;
    }

    .collection-title {
        font-size: 1.9rem;
        font-weight: 800;
        margin: 0;
        color: #0f172a;
    }

    .collection-filters {
        display: flex;
        align-items: center;
        flex-wrap: wrap;
        gap: 0.75rem;
    }

    .filter-pill {
        border: none;
        border-radius: 999px;
        padding: 0.55rem 1.35rem;
        font-weight: 600;
        letter-spacing: 0.02em;
        background: rgba(15, 23, 42, 0.05);
        color: #0f172a;
        transition: all 0.25s ease;
        box-shadow: 0 2px 6px rgba(15, 23, 42, 0.08);
    }

    .filter-pill:hover,
    .filter-pill.active {
        background: linear-gradient(135deg, #0ea5e9, #22c55e);
        color: #fff;
        box-shadow: 0 12px 30px -12px rgba(14, 165, 233, 0.6);
        transform: translateY(-2px);
    }

    .product-card {
        background: #fff;
        border-radius: 22px;
        overflow: hidden;
        height: 100%;
        box-shadow: 0 18px 40px -28px rgba(15, 23, 42, 0.45);
        transition: transform 0.35s ease, box-shadow 0.35s ease;
        display: flex;
        flex-direction: column;
    }

    .product-card:hover {
        transform: translateY(-8px);
        box-shadow: 0 30px 45px -25px rgba(14, 116, 144, 0.4);
    }

    .product-card__image {
        position: relative;
        width: 100%;
        aspect-ratio: 4 / 3;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 1.5rem;
        background: linear-gradient(160deg, rgba(14, 165, 233, 0.08), rgba(22, 163, 74, 0.08));
    }

    .product-card__image img {
        width: 100%;
        height: 100%;
        object-fit: contain;
        transition: transform 0.4s ease;
    }

    .product-card:hover .product-card__image img {
        transform: scale(1.05);
    }

    .product-card__badge {
        position: absolute;
        top: 1rem;
        left: 1rem;
        padding: 0.45rem 0.9rem;
        font-size: 0.75rem;
        font-weight: 700;
        border-radius: 999px;
        background: rgba(14, 165, 233, 0.18);
        color: #0369a1;
        text-transform: uppercase;
        letter-spacing: 0.08em;
    }

    .product-card__body {
        padding: 1.5rem 1.75rem 2rem;
        text-align: center;
        display: flex;
        flex-direction: column;
        gap: 0.75rem;
    }

    .product-card__meta {
        display: flex;
        flex-direction: column;
        gap: 0.4rem;
        color: #64748b;
        font-weight: 500;
        font-size: 0.85rem;
        margin-top: 0.35rem;
    }

    .product-card__meta-item {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 0.35rem;
    }

    .product-card__cta {
        margin-top: 0.75rem;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 0.4rem;
        padding: 0.55rem 1.35rem;
        border-radius: 999px;
        background: linear-gradient(135deg, #0ea5e9, #22c55e);
        color: #fff;
        font-weight: 600;
        text-decoration: none;
        transition: transform 0.25s ease, box-shadow 0.25s ease;
        box-shadow: 0 15px 30px -20px rgba(14, 165, 233, 0.8);
    }

    .product-card__cta:hover {
        transform: translateY(-3px);
        box-shadow: 0 18px 35px -18px rgba(34, 197, 94, 0.6);
        color: #fff;
    }

    .product-card__price {
        font-size: 1.35rem;
        font-weight: 700;
        color: #0f172a;
        margin: 0;
    }

    .product-card__title {
        font-size: 1.05rem;
        font-weight: 600;
        color: #1f2937;
        margin: 0;
        line-height: 1.4;
    }

    .product-card__title a {
        text-decoration: none;
        color: inherit;
    }

    .product-card__title a:hover {
        color: #0ea5e9;
    }

    .fade-in {
        animation: fadeInUp 0.5s ease forwards;
        opacity: 0;
    }

    @@keyframes fadeInUp {
        0% {
            opacity: 0;
            transform: translateY(20px);
        }

        100% {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@media (max-width: 992px) {
        .new-arrivals-collection {
            padding: 1.75rem;
        }

        .collection-title {
            font-size: 1.6rem;
        }
    }

    @@media (max-width: 768px) {
        .new-arrivals-collection {
            padding: 1.5rem;
        }

        .collection-toolbar {
            gap: 1rem;
        }

        .product-card__body {
            padding: 1.25rem 1.1rem 1.6rem;
        }
    }
</style>

<div class="new-arrivals-collection">
    <div class="collection-toolbar">
        <div>
            <span class="collection-eyebrow">Curated categories</span>
            <h3 class="collection-title">Shop by concern</h3>
        </div>
        <div class="collection-filters">
            <button type="button" class="filter-pill active" onclick="loadAllProductsBy(this)">All</button>
            <button type="button" class="filter-pill" onclick="loadProductsByCategory(1, this)">Mosquitos</button>
            <button type="button" class="filter-pill" onclick="loadProductsByCategory(2, this)">Ants</button>
            <button type="button" class="filter-pill" onclick="loadProductsByCategory(3, this)">Termites</button>
            <button type="button" class="filter-pill" onclick="loadProductsByCategory(4, this)">Fleas</button>
        </div>
    </div>

    <div class="row g-4" id="hideForCategoryProduct">
        @if (productSamples != null && productSamples.Any())
        {
            for (var index = 0; index < productSamples.Count; index++)
            {
                var item = productSamples[index];
                var delayStr = (index * 0.1).ToString("0.0", CultureInfo.InvariantCulture);
                var imagePath = resolveAsset(item.DocumentPath);
                var detailUrl = Url.Action("GetProductDetails", "WebSiteProducts", new { id = item.Id });
                var displayPrice = item.Price > 0 ? $"৳ {item.Price.ToString("N0")}" : item.FormattedPrice;
                <div class="col-12 col-sm-6 col-lg-4 fade-in" style="animation-delay:@(delayStr + "s")">
                    <div class="product-card">
                        <div class="product-card__image">
                            <a href="@detailUrl">
                                <img src="@imagePath" alt="@item.Title" />
                            </a>
                            <span class="product-card__badge">@item.CategoryDisplay</span>
                        </div>
                        <div class="product-card__body text-center">
                            <p class="product-card__price">@displayPrice</p>
                            <h3 class="product-card__title">
                                <a href="@detailUrl">@item.Title</a>
                            </h3>
                            <div class="product-card__meta">
                                <span class="product-card__meta-item"><i class="fa-solid fa-building me-2"></i>@item.ConcernDisplay</span>
                                <span class="product-card__meta-item"><i class="fa-regular fa-calendar me-2"></i>@item.CreateDate.ToString("dd MMM yyyy")</span>
                            </div>
                            <a class="product-card__cta" href="@detailUrl">View details</a>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12 text-center text-muted py-4">No products available.</div>
        }
    </div>
</div>

<script>
    var placeholderImage = '@placeholderImage';
    var detailBaseUrl = '@Url.Action("GetProductDetails", "WebSiteProducts")';

    function setActiveFilter(element) {
        if (!element) {
            return;
        }
        $(".filter-pill").removeClass("active");
        $(element).addClass("active");
    }

    function resolveImageUrl(path) {
        if (!path) {
            return placeholderImage;
        }

        if (/^https?:\/\//i.test(path)) {
            return path;
        }

        var normalized = path.replace(/~/g, '').trim();
        if (!normalized.startsWith('/')) {
            normalized = '/' + normalized.replace(/^\/+/, '');
        }

        return normalized;
    }

    function formatPrice(value, fallback) {
        var priceValue = parseFloat(value);
        if (!isNaN(priceValue) && priceValue > 0) {
            return priceValue.toLocaleString();
        }
        return fallback || 'On request';
    }

    function formatDate(value) {
        if (!value) {
            return 'New arrival';
        }

        var date = new Date(value);
        if (isNaN(date.getTime())) {
            return 'New arrival';
        }

        return date.toLocaleDateString(undefined, { day: '2-digit', month: 'short', year: 'numeric' });
    }

    function safeText(value) {
        return $('<div/>').text(value || '').html();
    }

    function renderProducts(products) {
        var container = $("#hideForCategoryProduct");
        container.empty();

        if (products && products.length) {
            var sortedItems = products.slice().sort(function (a, b) {
                var dateA = new Date(a.CreateDate || a.createDate || a.createdDate);
                var dateB = new Date(b.CreateDate || b.createDate || b.createdDate);
                return (isNaN(dateB) ? 0 : dateB.getTime()) - (isNaN(dateA) ? 0 : dateA.getTime());
            }).slice(0, 9);

            var delay = 0;
            sortedItems.forEach(function (item) {
                var delayStr = delay.toFixed(1);
                var productId = item.Id || item.id;
                if (!productId) {
                    return;
                }
                var detailUrl = detailBaseUrl + '/' + productId;
                var priceLabel = formatPrice(item.Price || item.price, item.FormattedPrice || item.formattedPrice);
                var priceDisplay = priceLabel === 'On request' ? priceLabel : '৳ ' + priceLabel;
                var categoryLabel = item.CategoryDisplay || item.categoryDisplay || item.ProcutCategory || item.procutCategory || 'Featured';
                var concernLabel = item.ConcernDisplay || item.concernDisplay || item.ConcernName || item.concernName || (item.ConcernID ? 'Concern #' + item.ConcernID : 'General');
                var listedDate = formatDate(item.CreateDate || item.createDate);
                var safeTitle = safeText(item.Title || item.title);
                var imageUrl = resolveImageUrl(item.DocumentPath || item.documentPath);

                var card = '' +
                    '<div class="col-12 col-sm-6 col-lg-4 fade-in" style="animation-delay:' + delayStr + 's">' +
                    '  <div class="product-card">' +
                    '    <div class="product-card__image">' +
                    '      <a href="' + detailUrl + '">' +
                    '        <img src="' + imageUrl + '" alt="' + safeTitle + '">' +
                    '      </a>' +
                    '      <span class="product-card__badge">' + safeText(categoryLabel) + '</span>' +
                    '    </div>' +
                    '    <div class="product-card__body text-center">' +
                    '      <p class="product-card__price">' + safeText(priceDisplay) + '</p>' +
                    '      <h3 class="product-card__title"><a href="' + detailUrl + '">' + safeTitle + '</a></h3>' +
                    '      <div class="product-card__meta">' +
                    '        <span class="product-card__meta-item"><i class="fa-solid fa-building me-2"></i>' + safeText(concernLabel) + '</span>' +
                    '        <span class="product-card__meta-item"><i class="fa-regular fa-calendar me-2"></i>' + safeText(listedDate) + '</span>' +
                    '      </div>' +
                    '      <a class="product-card__cta" href="' + detailUrl + '">View details</a>' +
                    '    </div>' +
                    '  </div>' +
                    '</div>';

                container.append(card);
                delay += 0.1;
            });
        } else {
            container.append('<div class="col-12 text-center text-muted py-4">No products available.</div>');
        }
    }

    function loadProductsByCategory(category, element) {
        setActiveFilter(element);
        $.ajax({
            url: '/WebSiteProducts/CateGoryWiseProductView',
            type: 'GET',
            data: { category: category },
            dataType: 'json',
            success: function (data) {
                renderProducts(data);
            },
            error: function (err) {
                console.log(err);
            }
        });
    }

    function loadAllProductsBy(element) {
        setActiveFilter(element);
        $.ajax({
            url: '/WebSiteProducts/GetAllProduct',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                renderProducts(data);
            },
            error: function (err) {
                console.log(err);
            }
        });
    }

    $(document).ready(function () {
        var activeFilter = document.querySelector('.filter-pill.active');
        if (!$('#hideForCategoryProduct').children().length) {
            loadAllProductsBy(activeFilter);
        }
    });
</script>
