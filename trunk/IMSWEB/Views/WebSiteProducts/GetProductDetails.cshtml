@model IMSWEB.WebsiteProductViewModels

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using System
@using System.Collections.Generic
@using System.Linq
@{
    var placeholderImage = Url.Content("~/Content/images/product-placeholder.svg");
    Func<string, string> resolveAsset = path =>
    {
        if (string.IsNullOrWhiteSpace(path))
        {
            return placeholderImage;
        }

        if (path.StartsWith("http", StringComparison.OrdinalIgnoreCase))
        {
            return path;
        }

        if (path.StartsWith("~/", StringComparison.OrdinalIgnoreCase))
        {
            return Url.Content(path);
        }

        if (path.StartsWith("/", StringComparison.OrdinalIgnoreCase))
        {
            return Url.Content("~" + path);
        }

        return Url.Content("~/" + path.TrimStart('/'));
    };

    var galleryImages = (Model.DocInfos ?? new List<VMDocInfo>())
        .Select(d => resolveAsset(d.DocPath))
        .Where(path => !string.IsNullOrWhiteSpace(path) && !string.Equals(path, placeholderImage, StringComparison.OrdinalIgnoreCase))
        .ToList();

    var primaryImage = resolveAsset(Model.DocumentPath);

    if (!string.Equals(primaryImage, placeholderImage, StringComparison.OrdinalIgnoreCase))
    {
        galleryImages.Insert(0, primaryImage);
    }

    galleryImages = galleryImages
        .Where(path => !string.IsNullOrWhiteSpace(path))
        .Distinct()
        .Take(6)
        .ToList();

    if (!galleryImages.Any())
    {
        galleryImages.Add(placeholderImage);
    }

    var descriptionPoints = (Model.Description ?? string.Empty)
        .Split(new[] { '\n' }, StringSplitOptions.RemoveEmptyEntries)
        .Select(t => t.Trim(' ', '-', '*', '\r'))
        .Where(t => !string.IsNullOrWhiteSpace(t))
        .ToList();

    var specificationEntries = new List<Tuple<string, string>>
    {
        Tuple.Create("Category", Model.CategoryDisplay),
        Tuple.Create("Concern", Model.ConcernDisplay),
        Tuple.Create("Product code", string.IsNullOrWhiteSpace(Model.Id) || string.Equals(Model.Id, "0", StringComparison.OrdinalIgnoreCase) ? "N/A" : Model.Id),
        Tuple.Create("Published", Model.CreateDate == DateTime.MinValue ? "N/A" : Model.CreateDate.ToString("dd MMM yyyy")),
        Tuple.Create("Price", Model.Price > 0 ? $"৳ {Model.Price.ToString("N0")}" : "On request")
    };

    var resourceDocs = (Model.DocInfos ?? new List<VMDocInfo>())
        .Where(d => !string.IsNullOrWhiteSpace(d.DocPath))
        .Select(d => new
        {
            d.DocName,
            Path = resolveAsset(d.DocPath)
        })
        .ToList();
}

<section class="product-hero py-5">
    <div class="container position-relative">
        <div class="row g-5 align-items-start">
            <div class="col-12 col-lg-6">
                <div class="product-gallery rounded-4 shadow-lg">
                    <div class="product-gallery__main">
                        <img id="mainProductImage"
                             src="@primaryImage"
                             alt="@Model.Title"
                             class="w-100 h-100 object-fit-contain" />
                        <span class="product-gallery__badge">New arrival</span>
                    </div>

                    @if (galleryImages.Count > 1)
                    {
                        <div class="product-gallery__thumbs">
                            @for (var i = 0; i < galleryImages.Count; i++)
                            {
                                var path = galleryImages[i];
                                var isActive = i == 0;
                                <img src="@path"
                                     class="product-thumb @(isActive ? "active-thumb" : string.Empty)"
                                     onclick="changeImage(this)"
                                     alt="Thumbnail @(i + 1)"
                                     data-image="@path" />
                            }
                        </div>
                    }
                </div>
            </div>

            <div class="col-12 col-lg-6">
                <div class="product-summary">
                    <div class="d-flex flex-wrap justify-content-between align-items-center gap-3">
                        <span class="product-chip"><i class="fa-solid fa-tags me-2"></i>@Model.CategoryDisplay</span>
                        <span class="product-meta"><i class="fa-regular fa-clock me-2"></i>@(Model.CreateDate == DateTime.MinValue ? "Just added" : Model.CreateDate.ToString("dd MMM yyyy"))</span>
                    </div>

                    <h1 class="product-title mt-4">@Model.Title</h1>
                    <p class="product-price display-6 fw-bold mb-3">@(Model.Price > 0 ? "৳ " + Model.Price.ToString("N0") : "On request")</p>

                    @if (!string.IsNullOrWhiteSpace(Model.Description))
                    {
                        <p class="product-description mb-4">@Model.Description</p>
                    }

                    <div class="info-grid mt-4">
                        @foreach (var spec in specificationEntries)
                        {
                            <div class="info-tile">
                                <span class="info-label">@spec.Item1</span>
                                <span class="info-value">@spec.Item2</span>
                            </div>
                        }
                    </div>

                    @if (descriptionPoints.Any())
                    {
                        <div class="product-details-panel mt-4">
                            <h2 class="panel-title">Key highlights</h2>
                            <ul class="bullet-list">
                                @foreach (var point in descriptionPoints)
                                {
                                    <li>@point</li>
                                }
                            </ul>
                        </div>
                    }

                    <div class="highlight-chips mt-4 d-flex flex-wrap gap-2">
                        <span class="highlight-chip"><i class="fa-solid fa-layer-group me-2"></i>@galleryImages.Count media asset@(galleryImages.Count > 1 ? "s" : string.Empty)</span>
                        <span class="highlight-chip"><i class="fa-solid fa-building me-2"></i>@Model.ConcernDisplay</span>
                        <span class="highlight-chip"><i class="fa-regular fa-calendar me-2"></i>@(Model.CreateDate == DateTime.MinValue ? "Freshly listed" : Model.CreateDate.ToString("MMM yyyy") + " release")</span>
                    </div>

                    @if (resourceDocs.Any())
                    {
                        <div class="product-details-panel mt-4">
                            <h2 class="panel-title">Downloads & resources</h2>
                            <ul class="resource-list">
                                @foreach (var doc in resourceDocs)
                                {
                                    var docName = string.IsNullOrWhiteSpace(doc.DocName) ? "Download file" : doc.DocName;
                                    <li>
                                        <a href="@doc.Path" target="_blank" rel="noopener">
                                            <i class="fa-solid fa-file-arrow-down me-2"></i>@docName
                                        </a>
                                    </li>
                                }
                            </ul>
                        </div>
                    }

                    <div class="cta-group d-flex flex-wrap gap-3 mt-5">
                        <a href="@Url.Action("AllActiveProduct", "WebSiteProducts")" class="btn btn-primary px-4 py-2 rounded-pill fw-semibold shadow-sm">
                            Explore more products
                        </a>
                        <a href="javascript:history.back()" class="btn btn-outline-secondary px-4 py-2 rounded-pill">
                            Back to catalog
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- RECOMMENDED SECTION -->
<section class="py-5 bg-white">
    <div class="container">
        <div class="text-center mb-5">
            <h2 class="fw-bold text-dark">More Products You May Like</h2>
            <div class="underline mx-auto mt-3 mb-4"></div>
        </div>
        <div class="recommendation-collection">
            @{ Html.RenderAction("AllProductView", "WebSiteProducts"); }
        </div>
    </div>
</section>

<style>
    .underline {
        width: 80px;
        height: 3px;
        background-color: #007bff;
        border-radius: 10px;
    }

    .product-hero {
        position: relative;
        background: linear-gradient(135deg, #eef2ff 0%, #f8fafc 35%, #ecfeff 100%);
    }

    .product-gallery {
        background: #fff;
        padding: 1.5rem;
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
        border-radius: 28px;
    }

    .product-gallery__main {
        position: relative;
        background: radial-gradient(circle at top, rgba(14, 165, 233, 0.16), transparent 60%);
        border-radius: 22px;
        padding: 2.5rem;
        min-height: 380px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .product-gallery__badge {
        position: absolute;
        top: 1.25rem;
        left: 1.25rem;
        padding: 0.45rem 1rem;
        border-radius: 999px;
        background: rgba(59, 130, 246, 0.15);
        color: #1d4ed8;
        font-weight: 700;
        text-transform: uppercase;
        letter-spacing: 0.12em;
        font-size: 0.7rem;
    }

    .product-gallery__thumbs {
        display: flex;
        flex-wrap: wrap;
        gap: 0.75rem;
    }

    .product-thumb {
        width: 82px;
        height: 82px;
        object-fit: cover;
        border-radius: 16px;
        border: 2px solid transparent;
        cursor: pointer;
        background: #f8fafc;
        transition: all 0.3s ease;
    }

    .product-thumb:hover {
        transform: translateY(-4px);
        border-color: rgba(14, 165, 233, 0.5);
    }

    .product-thumb.active-thumb {
        border-color: #22c55e;
        box-shadow: 0 12px 18px -12px rgba(34, 197, 94, 0.5);
    }

    .product-summary {
        background: rgba(255, 255, 255, 0.9);
        border-radius: 32px;
        padding: 2.5rem;
        box-shadow: 0 25px 50px -35px rgba(15, 23, 42, 0.45);
        backdrop-filter: blur(12px);
    }

    .product-title {
        font-size: 2.25rem;
        font-weight: 800;
        color: #0f172a;
    }

    .product-price {
        color: #15803d;
        text-shadow: 0 6px 18px rgba(34, 197, 94, 0.25);
    }

    .product-description {
        color: #334155;
        line-height: 1.7;
        font-size: 1.05rem;
    }

    .product-chip {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.45rem 1.1rem;
        border-radius: 999px;
        background: rgba(34, 197, 94, 0.15);
        color: #166534;
        font-weight: 700;
        text-transform: uppercase;
        letter-spacing: 0.1em;
        font-size: 0.75rem;
    }

    .product-meta {
        color: #64748b;
        font-weight: 600;
        font-size: 0.95rem;
    }

    .info-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
        gap: 1.2rem;
    }

    .info-tile {
        background: #f8fafc;
        border-radius: 20px;
        padding: 1rem 1.35rem;
        box-shadow: inset 0 1px 0 rgba(148, 163, 184, 0.15);
        display: flex;
        flex-direction: column;
        gap: 0.35rem;
    }

    .info-label {
        text-transform: uppercase;
        letter-spacing: 0.14em;
        font-size: 0.68rem;
        color: #94a3b8;
        font-weight: 700;
    }

    .info-value {
        font-weight: 600;
        color: #1f2937;
        word-break: break-word;
    }

    .product-details-panel {
        background: rgba(248, 250, 252, 0.85);
        border-radius: 22px;
        padding: 1.5rem 1.75rem;
        box-shadow: inset 0 1px 0 rgba(148, 163, 184, 0.18);
    }

    .panel-title {
        font-size: 1.1rem;
        font-weight: 700;
        color: #0f172a;
        margin-bottom: 1rem;
    }

    .bullet-list {
        margin: 0;
        padding-left: 1.2rem;
        display: grid;
        gap: 0.5rem;
    }

    .bullet-list li {
        color: #334155;
        line-height: 1.6;
    }

    .highlight-chip {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.55rem 1.15rem;
        border-radius: 999px;
        background: rgba(14, 165, 233, 0.12);
        color: #0369a1;
        font-weight: 600;
        font-size: 0.9rem;
    }

    .resource-list {
        list-style: none;
        padding: 0;
        margin: 0;
        display: grid;
        gap: 0.75rem;
    }

    .resource-list a {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        color: #0f172a;
        font-weight: 600;
        text-decoration: none;
        padding: 0.6rem 1rem;
        border-radius: 14px;
        background: rgba(14, 165, 233, 0.1);
        transition: background 0.2s ease, transform 0.2s ease;
    }

    .resource-list a:hover {
        background: rgba(14, 165, 233, 0.2);
        transform: translateY(-2px);
    }

    .cta-group .btn-primary {
        background: linear-gradient(135deg, #0ea5e9, #22c55e);
        border: none;
    }

    .cta-group .btn-primary:hover {
        box-shadow: 0 18px 35px -18px rgba(14, 165, 233, 0.65);
        transform: translateY(-2px);
    }

    .cta-group .btn-outline-secondary:hover {
        background-color: #0f172a;
        color: #fff;
    }

    .recommendation-collection .new-arrivals-collection {
        background: linear-gradient(160deg, #ffffff 0%, #f8fafc 100%);
    }

    @@media (max-width: 991px) {
        .product-gallery__main {
            min-height: 320px;
            padding: 2rem;
        }

        .product-summary {
            padding: 2rem;
        }

        .product-title {
            font-size: 2rem;
        }
    }

    @@media (max-width: 768px) {
        .product-gallery {
            padding: 1.25rem;
        }

        .product-summary {
            padding: 1.75rem;
        }

        .product-title {
            font-size: 1.75rem;
        }

        .product-description {
            font-size: 1rem;
        }

        .product-thumb {
            width: 70px;
            height: 70px;
        }
    }
</style>

<script>
    function changeImage(element) {
        const mainImg = document.getElementById("mainProductImage");
        const newSrc = element.getAttribute("data-image") || element.src;
        mainImg.src = newSrc;

        document.querySelectorAll(".product-thumb").forEach(img => img.classList.remove("active-thumb"));
        element.classList.add("active-thumb");
    }
</script>
