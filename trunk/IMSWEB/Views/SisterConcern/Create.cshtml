@model IMSWEB.CreateSisterConcernViewModel
@using IMSWEB.Model

@{
    string actionName = ViewContext.RouteData.Values["action"].ToString();
    ViewBag.Title = actionName + " SisterConcern";
}
<h4>@(ViewBag.Title + ".")</h4>
<hr />
<div class="row">
    <div class="col-md-6 col-sm-12 col-lg-6 col-xs-12">
        <div class="panel panel-default">
            <div class="panel-body">
                @using (Html.BeginForm(actionName, "SisterConcern", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.Id);

                    if (User.IsInRole(EnumUserRoles.Admin.ToString()))
                    {
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control input-sm", autofocus = "autofocus" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ContactNo, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ParentID, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.DropDownListFor(model => model.ParentID, new SelectList(Model.SisterConcerns, "ConcernID", "Name"), "--Select Parent--", new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(model => model.ParentID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        if (User.IsInRole("Admin") || User.IsInRole("LocalAdmin"))
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.ServiceCharge, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.ServiceCharge, new { htmlAttributes = new { @class = "form-control input-sm", @type = "number", @step = "0.01" } })
                                    @Html.ValidationMessageFor(model => model.ServiceCharge, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        }
                        <div class="form-group">
                            @Html.LabelFor(model => model.SmsContactNo, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.SmsContactNo, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                @Html.ValidationMessageFor(model => model.SmsContactNo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="form-group">
                            @Html.LabelFor(model => model.SmsContactNo, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.SmsContactNo, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                @Html.ValidationMessageFor(model => model.SmsContactNo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }


                    <div class="form-group">
                        <div class="col-md-offset-3 col-md-9">
                            <input type="submit" value="Add sister concern" class="btn btn-sm btn-primary" />
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
