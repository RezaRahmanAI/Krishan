@model IMSWEB.CreateTerritoryViewModel

@{
    string actionName = ViewContext.RouteData.Values["action"].ToString();
    ViewBag.Title = actionName + " Territory";
}

    <h4 class="inline-header">@(ViewBag.Title + ".")</h4>
<hr />

@using (Html.BeginForm(actionName, "Territory", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.Id);

    <div class="panel panel-default">
        <div class="panel-body">
            <div class="col-md-offset-3 col-md-5">
                <div class="form-group">
                    @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control input-sm", autofocus = "autofocus" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-offset-1 col-sm-11">
                        <input type="submit" value="Add Territory" class="btn btn-sm btn-primary" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}
