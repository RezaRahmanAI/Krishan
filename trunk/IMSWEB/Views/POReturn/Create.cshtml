<style>
    .col-md-4 {
        padding-right: 0px !important;
    }

    .col-md-8 {
        padding-left: 0px !important;
    }
</style>
@using IMSWEB.Model
@model PurchaseReturnOrderViewModel

@{
    string actionName = ViewContext.RouteData.Values["action"].ToString();
    string controller = ViewContext.RouteData.Values["controller"].ToString();
    ViewBag.Title = actionName + " PO Return";
}
<h4>@(ViewBag.Title + ".")</h4>
<hr />
@using (Html.BeginForm(actionName, controller, new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-md-6">
            <div class="panel panel-default">
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.PurchaseOrder.ChallanNo, new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(m => m.PurchaseOrder.ChallanNo, new { htmlAttributes = new { @class = "input-sm form-control input-sm" } })
                                            @Html.ValidationMessageFor(m => m.PurchaseOrder.ChallanNo, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.PurchaseOrder.OrderDate, new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            <div class='input-group date' id='OrderDate'>
                                                <input type='text' class="input-sm form-control input-sm" name='OrderDate' />
                                                <span class="input-group-addon">
                                                    <i class="fa fa-calendar" aria-hidden="true"></i>
                                                </span>
                                            </div>
                                        </div>
                                        @Html.ValidationMessageFor(m => m.PurchaseOrder.OrderDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.PurchaseOrder.SupplierId, new { @class = "control-label col-md-2" })
                                        <div class="col-md-10 full-width-picker">
                                            @{Html.RenderAction("RenderPicker", "Picker", new { pickerType = PickerType.Supplier, id = (Model != null && !string.IsNullOrEmpty(Model.PurchaseOrder.SupplierId)) ? Model.PurchaseOrder.SupplierId : "0" });}
                                            @Html.ValidationMessageFor(m => m.PurchaseOrder.SupplierId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.PurchaseOrder.CurrentDue, new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(m => m.PurchaseOrder.CurrentDue, new { htmlAttributes = new { @class = "input-sm form-control input-sm text-right", type = "number", step = "0.01", @readonly = "readonly" } })
                                            @Html.ValidationMessageFor(m => m.PurchaseOrder.CurrentDue, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="panel panel-default">
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.LabelFor(m => m.POProductDetails.ProductId, new { @class = "control-label col-md-2 full-width-picker-label" })
                                <div class="col-md-10 full-width-picker">
                                    @{Html.RenderAction("RenderPicker", "Picker", new { pickerType = PickerType.ProductDetail, id = (Model != null && !string.IsNullOrEmpty(Model.POProductDetails.ProductId)) ? Model.POProductDetails.ProductId : "0" });}
                                    @Html.ValidationMessageFor(m => m.POProductDetails.ProductId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.POProductDetails.IMENo, new { @class = "control-label col-md-2 full-width-picker-label" })
                                <div class="col-md-10 full-width-picker">
                                    @Html.EditorFor(m => m.POProductDetails.IMENo, new { htmlAttributes = new { @class = "input-sm form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(m => m.POProductDetails.IMENo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <div class="panel panel-default">
                <div class="panel-body">
                    <div class="pull-right">
                        <input type="submit" class="btn btn-sm btn-primary" name="addButton" value="Add to order" />
                        <button type="reset" class="btn btn-sm btn-danger">Clear</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <table id="productIdentifierTable"
                   data-toggle="table"
                   data-height="255"
                   class="table table-responsive table-bordered table-striped" cellspacing="0" width="100%">
                <thead>
                    <tr>
                        <th>
                            Sl
                        </th>
                        <th data-field="code">
                            Name
                        </th>
                        <th data-field="iemi">
                            IMEI /Barcode
                        </th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @if(Model.POProductDetailList!=null)
                    {
                        int i = 1;
                        foreach (var item in Model.POProductDetailList)
                        {
                            <tr>
                                <td width="5%">@i</td>
                                <td width="26.84%">@item.ProductName</td>
                                <td width="30%">
                                    <input type="text" class="form-control input-sm input-sm" readonly value="@item.IMENo" />
                                </td>
                                <td>
                                    @Html.ActionLink("Delete", "DeleteFromView", new { SDetailID = item.SDetailID })
                                </td>
                            </tr>
                            i++;
                        }
                    }
                </tbody>
            </table>

            <div class="panel panel-default">
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <div class="col-md-offset-4 col-md-8">
                                    <button type="button" class="btn btn-sm btn-info pull-right ml-2">Preview</button>
                                    <input type="submit" class="btn btn-sm btn-primary pull-right" name="submitButton" value="Save order" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
}


<script>
    $(document).ready(function () {
        $(window).keydown(function (event) {
            if (event.keyCode == 10 || event.keyCode == 13) {
                event.preventDefault();
                return false;
            }
        });
    });

    $('#OrderDate').datetimepicker({
        @{
                if (Model == null || Model.PurchaseOrder.OrderDate == null) {
                    @:defaultDate: moment(),
                                                                                                    }
                else
                {
            @:defaultDate: '@(Convert.ToDateTime(Model.PurchaseOrder.OrderDate).ToString("dd-MMM-yyyy"))',
                                                                                            }
            @:format: 'DD-MMM-YYYY'
                                                                                                    }
    });

</script>
