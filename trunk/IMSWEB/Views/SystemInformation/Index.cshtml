@model CreateSystemInformationViewModel

@{
    string actionName = ViewContext.RouteData.Values["action"].ToString();
    ViewBag.Title = "System Information";
}
<h4 class="inline-header">Current System Information</h4>
<div class="row">
    <div class="col-md-12">
        @using (Html.BeginForm("Edit", "SystemInformation", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new
        {
            @class = "form-horizontal",
            role = "form",
            enctype = "multipart/form-data"
        }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.Id);

            <div class="row">
                <div class="col-md-6">

                    <div class="row">
                        <div class="col-md-12">
                            <div class="panel panel-default">
                                <div class="panel-body">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.TelephoneNo, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.EditorFor(model => model.TelephoneNo, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                            @Html.ValidationMessageFor(model => model.TelephoneNo, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DeviceIP, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.EditorFor(model => model.DeviceIP, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                            @Html.ValidationMessageFor(model => model.DeviceIP, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DeviceSerialNO, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.EditorFor(model => model.DeviceSerialNO, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                            @Html.ValidationMessageFor(model => model.DeviceSerialNO, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                            @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.WebAddress, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.EditorFor(model => model.WebAddress, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                            @Html.ValidationMessageFor(model => model.WebAddress, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.SystemStartDate, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            <div class='input-group date' id='SystemStartDate'>
                                                <input type='text' class="input-sm form-control input-sm" name='SystemStartDate' />
                                                <span class="input-group-addon">
                                                    <i class="fa fa-calendar" aria-hidden="true"></i>
                                                </span>
                                                @Html.ValidationMessageFor(m => m.SystemStartDate, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-check  col-md-offset-3">
                                        @Html.EditorFor(model => model.CustomerDueLimitApply, new { htmlAttributes = new { @class = "form-check-input" } })
                                        @Html.LabelFor(model => model.CustomerDueLimitApply, htmlAttributes: new { @class = "form-check-label" })
                                        @Html.ValidationMessageFor(model => model.CustomerDueLimitApply, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-check  col-md-offset-3">
                                        @Html.EditorFor(model => model.EmployeeDueLimitApply, new { htmlAttributes = new { @class = "form-check-input" } })
                                        @Html.LabelFor(model => model.EmployeeDueLimitApply, htmlAttributes: new { @class = "form-check-label" })
                                        @Html.ValidationMessageFor(model => model.EmployeeDueLimitApply, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-check  col-md-offset-3">
                                        @Html.EditorFor(model => model.EmployeeWiseTransactionEnable, new { htmlAttributes = new { @class = "form-check-input" } })
                                        @Html.LabelFor(model => model.EmployeeWiseTransactionEnable, htmlAttributes: new { @class = "form-check-label" })
                                        @Html.ValidationMessageFor(model => model.EmployeeWiseTransactionEnable, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-check  col-md-offset-3">
                                        @Html.EditorFor(model => model.ApprovalSystemEnable, new { htmlAttributes = new { @class = "form-check-input" } })
                                        @Html.LabelFor(model => model.ApprovalSystemEnable, htmlAttributes: new { @class = "form-check-label" })
                                        @Html.ValidationMessageFor(model => model.ApprovalSystemEnable, "", new { @class = "text-danger" })
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <div class="panel panel-default">
                                <div class="panel-body">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyLogo, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @if (Model.CompanyLogo == null)
                                            {
                                                @:None
                                            }
                                            else
                                            {
                                                <img width="150" height="150" src="@Url.Action("GetImage", "SystemInformation", new { Model.Id })" />
                                            }
                                            <label>Upload new image: <input type="file" class="form-control" accept=".jpg,.jpeg,.png" name="Image" /></label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>

                <div class="col-md-6">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="panel panel-default">
                                <div class="panel-body">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.APIKey, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-6">
                                            @Html.EditorFor(model => model.APIKey, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                            @Html.ValidationMessageFor(model => model.APIKey, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-2">
                                            <input type="button" class="btn btn-success btn-xs" name="btnGetAPIKey" onclick="GenerateSHA256String()" value="Update key" />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ProductPhotoPath, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.EditorFor(model => model.ProductPhotoPath, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                            @Html.ValidationMessageFor(model => model.ProductPhotoPath, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.SupplierPhotoPath, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.EditorFor(model => model.SupplierPhotoPath, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                            @Html.ValidationMessageFor(model => model.SupplierPhotoPath, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CustomerPhotoPath, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.EditorFor(model => model.CustomerPhotoPath, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                            @Html.ValidationMessageFor(model => model.CustomerPhotoPath, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CustomerNIDPatht, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.EditorFor(model => model.CustomerNIDPatht, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                            @Html.ValidationMessageFor(model => model.CustomerNIDPatht, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.SupplierDocPath, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.EditorFor(model => model.SupplierDocPath, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                            @Html.ValidationMessageFor(model => model.SupplierDocPath, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.EmployeePhotoPath, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.EditorFor(model => model.EmployeePhotoPath, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                            @Html.ValidationMessageFor(model => model.EmployeePhotoPath, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <div class="panel">
                                <div class="panel-body">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.SMSProviderID, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.EnumDropDownListFor(model => model.SMSProviderID, new { @class = "form-control input-sm" })
                                            @Html.ValidationMessageFor(model => model.SMSProviderID, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-check  col-md-offset-3">
                                        @Html.EditorFor(model => model.SMSServiceEnable, new { htmlAttributes = new { @class = "form-check-input" } })
                                        @Html.LabelFor(model => model.SMSServiceEnable, htmlAttributes: new { @class = "form-check-label" })
                                        @Html.ValidationMessageFor(model => model.SMSServiceEnable, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DaysBeforeSendSMS, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.EditorFor(model => model.DaysBeforeSendSMS, new { htmlAttributes = new { @class = "form-control input-sm", @type = "number" } })
                                            @Html.ValidationMessageFor(model => model.DaysBeforeSendSMS, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.SenderId, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.EditorFor(model => model.SenderId, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                            @Html.ValidationMessageFor(model => model.SenderId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.SmsCharge, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.EditorFor(model => model.SmsCharge, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                            @Html.ValidationMessageFor(model => model.SmsCharge, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyURL, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.EditorFor(model => model.CompanyURL, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                            @Html.ValidationMessageFor(model => model.CompanyURL, "", new { @class = "text-danger" })
                                        </div>
                                    </div>



                                    <div class="form-check  col-md-offset-3">
                                        @Html.EditorFor(model => model.SMSSendToOwner, new { htmlAttributes = new { @class = "form-check-input" } })
                                        @Html.LabelFor(model => model.SMSSendToOwner, htmlAttributes: new { @class = "form-check-label" })
                                        @Html.ValidationMessageFor(model => model.SMSSendToOwner, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.InsuranceContactNo, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.EditorFor(model => model.InsuranceContactNo, new { htmlAttributes = new { @class = "form-control input-sm", @type = "number" } })
                                            @Html.ValidationMessageFor(model => model.InsuranceContactNo, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="panel">
                                <div class="panel-body">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ExpireDate, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            <div class='input-group date' id='ExpireDate'>
                                                <input type='text' class="input-sm form-control input-sm" name='ExpireDate' />
                                                <span class="input-group-addon">
                                                    <i class="fa fa-calendar" aria-hidden="true"></i>
                                                </span>
                                                @Html.ValidationMessageFor(m => m.ExpireDate, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.WarningMsg, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.TextAreaFor(model => model.WarningMsg, new { @class = "form-control input-sm", })
                                            @Html.ValidationMessageFor(model => model.WarningMsg, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ExpireMessage, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.TextAreaFor(model => model.ExpireMessage, new { @class = "form-control input-sm", })
                                            @Html.ValidationMessageFor(model => model.ExpireMessage, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <div class="panel">
                                <div class="panel-body">
                                    <div class="pull-right">
                                        <input type="submit" value="Update Info" class="btn btn-sm btn-primary" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>


        }
    </div>
</div>

<script>
    $(function () {

        $('#SystemStartDate').datetimepicker({
            @{
            if (Model == null || Model.SystemStartDate == null)
            {
                @:defaultDate: moment().endOf('month'),
                }
                    else
                    {
                @:defaultDate: '@(Convert.ToDateTime(Model.SystemStartDate).ToString("dd-MMM-yyyy"))',
                }
                @:format: 'DD-MMM-YYYY'
            }
        });

        $('#ExpireDate').datetimepicker({
            @{
            if (Model == null || Model.ExpireDate ==null)
            {
                @:defaultDate: moment(),
                }
                    else
                    {
                @:defaultDate: '@(Convert.ToDateTime(Model.ExpireDate).ToString("dd-MMM-yyyy"))',
                }
                @:format: 'DD-MMM-YYYY'
            }
            });
    });


    $(document).on('click', '#APIKey', function () {
        $("#APIKey").select();
    });

    function GenerateSHA256String() {
        $("#APIKey").val("");
        $.ajax({
            url: "/SystemInformation/GenerateSHA256String",
            type: "GET",
            dataType: "json",
            success: function (data) {
                $("#APIKey").val(data);
            },
            error: function (err) {
                toastr.error(err);
            }
        });
    }

</script>
