@using IMSWEB.Model
@model IEnumerable<GetPurchaseOrderViewModel>

@{
    ViewBag.Title = "Purchase Orders";
}
<h4 class="text-left inline-header">Existing purchase orders.</h4>
<div class="row">
    <div class="col-md-10 col-md-offset-1">
        @using (Html.BeginForm("Index", "PurchaseOrder", FormMethod.Post, new { }))
        {
            <div class="panel panel-default">
                <div class="panel-body">
                    <table class="table text-nowrap">
                        <tr>
                            <td>
                                @Html.Label("From Date", htmlAttributes: new { @class = "control-label" })
                            </td>
                            <td>
                                <div class='col-sm-12 input-group date' id='FromDate'>
                                    <input type='text' class="input-sm form-control input-sm" name='FromDate' />
                                    <span class="input-group-addon">
                                        <i class="fa fa-calendar" aria-hidden="true"></i>
                                    </span>
                                </div>
                            </td>
                            <td>
                                @Html.Label("To Date", htmlAttributes: new { @class = "control-label" })
                            </td>
                            <td>
                                <div class='col-sm-12 input-group date' id='ToDate'>
                                    <input type='text' class="input-sm form-control input-sm" name='ToDate' />
                                    <span class="input-group-addon">
                                        <i class="fa fa-calendar" aria-hidden="true"></i>
                                    </span>
                                </div>
                            </td>
                            <td>
                                <img id="spinningIcon" height="45" width="45" style="display: none;" class="pull-right" src="~/Content/images/Spinner.gif" />
                            </td>
                            <td>
                                <div class="btn-group">
                                    <input id="btnPreview" type="submit" value="Search" class="btn btn-sm btn-info mr-2" />
                                    @Html.ActionLink("Create new order", "Create", routeValues: null, htmlAttributes: new { @class = "btn btn-primary btn-sm pull-right" })
                                </div>
                            </td>
                        </tr>
                    </table>
                </div>
            </div>
        }
    </div>
</div>
<table id="purchaseOrderTable"
       data-toggle="table"
       data-search="true"
       data-show-refresh="true"
       data-show-toggle="true"
       data-show-columns="true"
       data-show-export="true"
       data-detail-view="true"
       data-pagination="true"
       data-id-field="productName"
       data-page-list="[10, 25, 50, 100, ALL]"
       data-page-size="15"
       class="table table-responsive table-bordered table-striped" cellspacing="0" width="100%">
    <thead>
        <tr>
            <th>
                Sl
            </th>
            <th data-field="challanNo"
                data-sortable="true">
                @Html.DisplayNameFor(model => model.ChallanNo)
            </th>
            <th data-field="orderDate"
                data-sorter="sorter"
                data-sortable="true">
                @Html.DisplayNameFor(model => model.OrderDate)
            </th>
            <th data-field="supplierName"
                data-sortable="true">
                @Html.DisplayNameFor(model => model.SupplierName)
            </th>
            <th data-field="companyName"
                data-sortable="true">
                @Html.DisplayNameFor(model => model.CompanyName)
            </th>
            <th data-field="contactNo"
                data-sortable="true">
                @Html.DisplayNameFor(model => model.ContactNo)
            </th>
            <th data-field="status"
                data-sortable="true">
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @{
            int count = 1;
            foreach (var item in Model)
            {
                <tr>
                    <td>
                        @count
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ChallanNo)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrderDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SupplierName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CompanyName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ContactNo)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>

                    <td>
                        @if (User.IsInRole(EnumUserRoles.Admin.ToString()) || User.IsInRole(EnumUserRoles.LocalAdmin.ToString()))
                        {
                            if (item.Status.Equals("Purchase"))
                            {
                                @Html.ActionLink("Edit", "Edit", new { orderId = item.PurchaseOrderId, IsDO = false })
                                <span>|</span>
                                @Html.ActionLink("Return", "Delete", new { orderId = item.PurchaseOrderId, IsDO = false }, new { onclick = "if(!confirm('Do you want to delete this order?')) return false;" })
                                <span>|</span>
                            }
                            @Html.ActionLink("Invoice", "GetInvoiceByID", new { orderId = item.PurchaseOrderId, IsDO = false }, new { @class = "btn btn-xs btn-info" })
                        }
                    </td>
                </tr>
                count++;

                @*@if (User.IsInRole("Admin") ||  User.IsInRole("LocalAdmin"))
                    {
                        if (item.Status.Equals("Purchase"))
                        {
                            @Html.ActionLink("Edit", "Edit", new { orderId = item.PurchaseOrderId,IsDO=false })
                            <span>|</span>
                            @Html.ActionLink("Return", "Delete", new { orderId = item.PurchaseOrderId, IsDO = false }, new { onclick = "if(!confirm('Do you want to delete this order?')) return false;" })
                        }

                    }*@
                @*@if (User.IsInRole("LocalAdmin"))
                    {
                        if (item.Status.Equals("Purchase"))
                        {
                            @Html.ActionLink("Return", "Delete", new { orderId = item.PurchaseOrderId, IsDO = false }, new { onclick = "if(!confirm('Do you want to delete this order?')) return false;" })
                        }
                    }*@


                @*</td>
                    </tr>*@
                //count++;
            }
        }
    </tbody>
</table>



<script>
$(document).ready(function () {
@{
    if (TempData.ContainsKey("IsInvoiceReady") && Convert.ToBoolean(TempData["IsInvoiceReady"]) == true)
    {
        @:$.ajax({
        @:url: "/Report/PurchaseInvoice",
        @:type: "GET",
        @:dataType: "html",
        @:success: function (data) {
        @:$('#report').html(data);
        @:},
        @:error: function (err) {
        @:console.error(JSON.stringify(err));
        @:}
        @:});
     }

    if (TempData.ContainsKey("IsInvoiceReadyById") && Convert.ToBoolean(TempData["IsInvoiceReadyById"]) == true)
    {
        @:$.ajax({
        @:url: "/Report/PurchaseInvoiceById",
        @:type: "GET",
        @:dataType: "html",
        @:success: function (data) {
        @:$('#report').html(data);
        @:},
        @:error: function (err) {
        @:console.error(JSON.stringify(err));
        @:}
        @:});
         }
}



    $('#FromDate').datetimepicker({
        defaultDate: "@ViewBag.FromDate.ToString("dd-MMM-yyyy")",
        format: 'DD-MMM-YYYY'
    });

    $('#ToDate').datetimepicker({
        defaultDate: "@ViewBag.ToDate.ToString("dd-MMM-yyyy")",
        format: 'DD-MMM-YYYY'
    });


    });
</script>