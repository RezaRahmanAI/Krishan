@model IEnumerable<GetCreditSalesOrderViewModel>

@{
    ViewBag.Title = "Credit Sales Orders";
    var controllerName = this.ViewContext.RouteData.Values["controller"].ToString();
}
<h4 class="text-left inline-header">Existing credit sales orders.</h4>
<hr />
<div class="row">
    <div class="col-md-10 col-md-offset-1">
        @using (Html.BeginForm("Index", controllerName, FormMethod.Post, new { }))
        {
            <div class="panel panel-default">
                <div class="panel-body">
                    <table class="table text-nowrap">
                        <tr>
                            <td>
                                @Html.Label("From Date", htmlAttributes: new { @class = "control-label" })
                            </td>
                            <td>
                                <div class='col-sm-12 input-group date' id='FromDate'>
                                    <input type='text' class="input-sm form-control input-sm" name='FromDate' />
                                    <span class="input-group-addon">
                                        <i class="fa fa-calendar" aria-hidden="true"></i>
                                    </span>
                                </div>
                            </td>
                            <td>
                                @Html.Label("To Date", htmlAttributes: new { @class = "control-label" })
                            </td>
                            <td>
                                <div class='col-sm-12 input-group date' id='ToDate'>
                                    <input type='text' class="input-sm form-control input-sm" name='ToDate' />
                                    <span class="input-group-addon">
                                        <i class="fa fa-calendar" aria-hidden="true"></i>
                                    </span>
                                </div>
                            </td>
                            <td>
                                <img id="spinningIcon" height="45" width="45" style="display: none;" class="pull-right" src="~/Content/images/Spinner.gif" />
                            </td>
                            <td>
                                <div class="btn-group">
                                    <input id="btnPreview" type="submit" value="Search" class="btn btn-sm btn-info mr-2" />
                                    @Html.ActionLink("Create new order", "Create", routeValues: null, htmlAttributes: new { @class = "btn btn-primary btn-sm pull-right" })
                                </div>
                            </td>
                        </tr>
                    </table>
                </div>
            </div>
        }
    </div>
</div>
<table id="salesOrderTable"
       data-toggle="table"
       data-search="true"
       data-show-refresh="true"
       data-show-toggle="true"
       data-show-columns="true"
       data-show-export="true"
       data-detail-view="true"
       data-pagination="true"
       data-id-field="customerName"
       data-page-list="[10, 25, 50, 100, ALL]"
       data-page-size="15"
       class="table table-responsive table-bordered table-striped" cellspacing="0" width="100%">
    <thead>
        <tr>
            <th>
                Sl
            </th>
            <th data-field="invoiceNo"
                data-sortable="true">
                @Html.DisplayNameFor(model => model.InvoiceNo)
            </th>
            <th data-field="orderDate"
                data-sorter="sorter"
                data-sortable="true">
                @Html.DisplayNameFor(model => model.OrderDate)
            </th>
            <th data-field="customerName"
                data-sortable="true">
                @Html.DisplayNameFor(model => model.CustomerName)
            </th>
            <th data-field="contactNo"
                data-sortable="true">
                @Html.DisplayNameFor(model => model.ContactNo)
            </th>
            <th data-field="dueAmount"
                data-sortable="true">
                @Html.DisplayNameFor(model => model.DueAmount)
            </th>
            <th data-field="status"
                data-sortable="true">
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @{
            int count = 1;
            foreach (var item in Model)
            {
                <tr>
                    <td>
                        @count
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.InvoiceNo)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrderDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CustomerName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ContactNo)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DueAmount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        @{
                            if (item.Status.Equals("Sales"))
                            {
                                @Html.ActionLink("Ins. Payment", "Edit", new { orderId = item.SalesOrderId }, new {@class="btn btn-xs btn-info" });
                                <span> | </span>
                                @Html.ActionLink("Return", "Delete", new { orderId = item.SalesOrderId }, new { onclick = "if(!confirm('Do you want to take rturn this order?')) return false;", @class = "btn btn-xs btn-danger" });
                                 <span>|</span>
                                @Html.ActionLink("Invoice", "Invoice", new { orderId = item.SalesOrderId }, new { @class = "btn btn-xs btn-success" })
                                <span>|</span>
                                @Html.ActionLink("Money Rectp", "MoneyReceipt", new { orderId = item.SalesOrderId }, new { @class = "btn btn-xs btn-primary" })

                            }
                        }
                    </td>
                </tr>
                                count++;
                            }
        }
    </tbody>
</table>
<script>
    $(document).ready(function () {
        @{
    if (TempData.ContainsKey("IsCInvoiceReady") && Convert.ToBoolean(TempData["IsCInvoiceReady"]) == true)
    {
        @:$.ajax({
        @:url: "/Report/CreditSalesInvoice",
        @:type: "GET",
        @:dataType: "html",
        @:success: function (data) {
        @:$('#report').html(data);
        @:},
        @:error: function (err) {
        @:console.error(JSON.stringify(err));
        @:}
        @:});
      }

    if (TempData.ContainsKey("IsCInvoiceReadyById") && Convert.ToBoolean(TempData["IsCInvoiceReadyById"]) == true)
    {
        @:$.ajax({
        @:url: "/Report/CreditSalesInvoiceReportByID",
        @:type: "GET",
        @:dataType: "html",
        @:success: function (data) {
        @:$('#report').html(data);
        @:},
        @:error: function (err) {
        @:console.error(JSON.stringify(err));
        @:}
        @:});
     }

    if (TempData.ContainsKey("IsMoneyReceiptReadyByID") && Convert.ToBoolean(TempData["IsMoneyReceiptReadyByID"]) == true)
    {
        @:$.ajax({
        @:url: "/Report/CreditSalesMoneyReceiptByID",
        @:type: "GET",
        @:dataType: "html",
        @:success: function (data) {
        @:$('#report').html(data);
        @:},
        @:error: function (err) {
        @:console.error(JSON.stringify(err));
        @:}
        @:});
             }
}


        $('#FromDate').datetimepicker({
            defaultDate: "@ViewBag.FromDate.ToString("dd-MMM-yyyy")",
        format: 'DD-MMM-YYYY'
    });

    $('#ToDate').datetimepicker({
        defaultDate: "@ViewBag.ToDate.ToString("dd-MMM-yyyy")",
    format: 'DD-MMM-YYYY'
    });

    });
</script>