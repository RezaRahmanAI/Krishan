@model ProductUnitTypeViewModel
@{
    string actionName = ViewContext.RouteData.Values["action"].ToString();
    ViewBag.Title = actionName + "";
}

<h4 class="inline-header">@(ViewBag.Title + " Product Unit.")</h4>
<hr />
<div class="row">
    <div class="col-md-offset-3 col-md-6">
        <div class="panel panel-default">
            <div class="panel-body">
                @using (Html.BeginForm(actionName, "ProductUnit", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.ProUnitTypeID);
                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control input-sm", autofocus = "autofocus" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ConvertValue, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.ConvertValue, new { htmlAttributes = new { @class = "form-control input-sm text-right", @type = "number" } })
                            @Html.ValidationMessageFor(model => model.ConvertValue, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control input-sm text-right", @type = "number" } })
                            @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.UnitName, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.UnitName, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.ValidationMessageFor(model => model.UnitName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-offset-3 col-sm-9">
                            <input type="submit" value="Add" class="btn btn-sm btn-primary" />
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>


