@model IMSWEB.CreateRoleViewModel

@{
    string actionName = ViewContext.RouteData.Values["action"].ToString();
    ViewBag.Title = actionName + " Role";
}

<h4>@(ViewBag.Title + ".")</h4>
<hr />

@using (Html.BeginForm(actionName, "Role", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.Hidden("MenuId[]");
    <div class="col-md-4">
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group pull-right">
            <div class="col-md-12">
                <input type="submit" value="Add Role" class="btn btn-sm btn-primary" />
            </div>
        </div>
    </div>
    <div class="col-md-8">
        <table id="menuTable"
               data-toggle="table"
               data-query-params="queryParams"
               data-click-to-select="true"
               class="table table-responsive table-bordered table-striped" cellspacing="0" width="100%">
            <thead>
                <tr>
                    <th data-field="id" class="hidden">
                    </th>
                    <th data-checkbox="true">
                    </th>
                    <th>
                        Sl
                    </th>
                    <th data-field="title"
                        data-sorter="sorter"
                        data-sortable="true">
                        Title
                    </th>
                    <th data-field="parent"
                        data-sorter="sorter"
                        data-sortable="true">
                        Parent Menu
                    </th>
                    <th data-field="url"
                        data-sorter="sorter"
                        data-sortable="true">
                        Url
                    </th>
                </tr>
            </thead>
            <tbody>
                @{
                    int count = 1;
                    foreach (var item in Model.Menus)
                    {
                        <tr>
                            <td class="hidden">
                                @Html.DisplayFor(modelItem => item.Id)
                            </td>
                            <td></td>
                            <td>
                                @count
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Title)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ParentId)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Url)
                            </td>
                        </tr>
                        count++;
                    }
                }
            </tbody>
        </table>
    </div>
                    }
<script>
    var $table = $('#menuTable');
    var checkedIdArr = [];
    $(document).ready(function () {
        @{
            if (!string.IsNullOrEmpty(Model.MenuId))
            {
                string[] menuIdArr = Model.MenuId.Split(',');
                for (int i = 0; i < menuIdArr.Length; i++)
                {
                    @: var index = getRowById(@menuIdArr[i]).attr('data-index');
                    @:$table.bootstrapTable('check', index);
                }
            }
            }
        $('input[name=btSelectAll]').hide();
    });
    $table.on('check.bs.table', function (e, row) {
        checkedIdArr.push($.trim(row.id));
        $('#MenuId__').val(checkedIdArr);
    });
    $table.on('uncheck.bs.table', function (e, row) {
        var index = checkedIdArr.indexOf($.trim(row.id));
        if (index > -1)
            checkedIdArr.splice(index, 1);
        $('#MenuId__').val(checkedIdArr);
    });
    function getRowById(id) {
        return $("td").filter(function () {
            return $(this).hasClass('hidden') && $.trim($(this).text()) == id;
        }).closest("tr");
    }
</script>
